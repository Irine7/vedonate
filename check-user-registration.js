// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ VeDonate –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ
const { ThorClient } = require('@vechain/sdk-network');
const { ABIContract } = require('@vechain/sdk-core');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è VeChain Testnet
const thor = new ThorClient('https://testnet.vechain.org');

// –ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ VeDonate
const CONTRACT_ADDRESS = '0x3e445638b907d942c33b904d6ea6951ac533bc34';

// ABI –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ (—Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏)
const VEDONATE_ABI = [
	'function isDonorRegistered(address donor) view returns (bool)',
	'function getDonorInfo(address donor) view returns (tuple(address wallet, uint256 totalDonations, uint256 plasmaDonations, uint256 totalB3TR, bool isRegistered, uint256 lastDonation))',
];

// –ê–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
const USER_ADDRESS = '0xb302484fc7cbecad3983E6C33efE28C3286972f6';

async function checkUserRegistration() {
	try {
		console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
		console.log(`üìç –ê–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${USER_ADDRESS}`);
		console.log(`üìÑ –ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞: ${CONTRACT_ADDRESS}`);
		console.log('');

		// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ —á–µ—Ä–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API
		const contract = thor.account(CONTRACT_ADDRESS);
		const abiContract = new ABIContract(VEDONATE_ABI);

		// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
		console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...');
		const isRegisteredMethod = abiContract.getMethodById('isDonorRegistered');
		const isRegisteredCall = contract
			.method(isRegisteredMethod)
			.call(USER_ADDRESS);
		const isRegisteredResult = await isRegisteredCall;

		const isRegistered = isRegisteredResult.decoded[0];
		console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${isRegistered}`);
		console.log('');

		// 2. –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–Ω–æ—Ä–µ
		console.log('2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ–Ω–æ—Ä–µ...');
		const donorInfoMethod = abiContract.getMethodById('getDonorInfo');
		const donorInfoCall = contract.method(donorInfoMethod).call(USER_ADDRESS);
		const donorInfoResult = await donorInfoCall;

		const donorInfo = donorInfoResult.decoded[0];
		console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–Ω–æ—Ä–µ:');
		console.log(`   üè† –ö–æ—à–µ–ª–µ–∫: ${donorInfo.wallet}`);
		console.log(`   üìà –í—Å–µ–≥–æ –¥–æ–Ω–∞—Ü–∏–π: ${donorInfo.totalDonations.toString()}`);
		console.log(
			`   üíß –î–æ–Ω–∞—Ü–∏–π –ø–ª–∞–∑–º—ã: ${donorInfo.plasmaDonations.toString()}`
		);
		console.log(`   ü™ô –í—Å–µ–≥–æ B3TR: ${donorInfo.totalB3TR.toString()}`);
		console.log(`   ‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${donorInfo.isRegistered}`);
		console.log(
			`   üïí –ü–æ—Å–ª–µ–¥–Ω—è—è –¥–æ–Ω–∞—Ü–∏—è: ${donorInfo.lastDonation.toString()}`
		);
		console.log('');

		// 3. –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
		if (isRegistered) {
			console.log('üéâ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –£–ñ–ï –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù –∫–∞–∫ –¥–æ–Ω–æ—Ä!');
			console.log(
				'üí° –≠—Ç–æ –æ–±—ä—è—Å–Ω—è–µ—Ç –æ—à–∏–±–∫—É "execution reverted" - –∫–æ–Ω—Ç—Ä–∞–∫—Ç –æ—Ç–∫–ª–æ–Ω—è–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.'
			);
		} else {
			console.log('‚ùå –†–ï–ó–£–õ–¨–¢–ê–¢: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù –∫–∞–∫ –¥–æ–Ω–æ—Ä.');
			console.log('üí° –ú–æ–∂–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
		}
	} catch (error) {
		console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error);

		if (error.message.includes('revert')) {
			console.log('üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
			console.log('   - –ö–æ–Ω—Ç—Ä–∞–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É');
			console.log('   - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ABI');
			console.log('   - –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é');
		}
	}
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkUserRegistration();
